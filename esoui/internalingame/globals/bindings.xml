<Bindings>
    <Layer name="SI_KEYBINDINGS_LAYER_DIALOG" allowFallthrough="false">
        <Category>
            <Action name="DIALOG_PRIMARY">
                <Down>ZO_Dialogs_ButtonKeybindPressed(keybind)</Down>
            </Action>
            <Action name="DIALOG_SECONDARY">
                <Down>ZO_Dialogs_ButtonKeybindPressed(keybind)</Down>
            </Action>
            <Action name="DIALOG_TERTIARY">
                <Down>ZO_Dialogs_ButtonKeybindPressed(keybind)</Down>
            </Action>
            <Action name="DIALOG_NEGATIVE">
                <Down>ZO_Dialogs_ButtonKeybindPressed(keybind)</Down>
            </Action>
            <Action name="DIALOG_CLOSE">
                <Down>ZO_Dialogs_CloseKeybindPressed()</Down>
            </Action>
            <Action name="DIALOG_RESET">
                <Down>ZO_Dialogs_ButtonKeybindPressed(keybind)</Down>
            </Action>
        </Category>
    </Layer>

    <Layer name="SI_KEYBINDINGS_LAYER_USER_INTERFACE_SHORTCUTS">
        <Category name="SI_KEYBINDINGS_CATEGORY_GENERAL">
            <Action name="UI_SHORTCUT_PRIMARY">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_SECONDARY">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_TERTIARY">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_QUATERNARY">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_QUINARY">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_NEGATIVE">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>
            
            <Action name="UI_SHORTCUT_EXIT" hideAction="true" allowOnInputModeChange="true">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>
        </Category>

        <Category name="SI_KEYBINDINGS_CATEGORY_USER_INTERFACE_GAMEPAD">
            <Action name="UI_SHORTCUT_LEFT_STICK">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <!-- These binds don't do anything directly, but they allow the keys that
            emulate analog stick directional input to be rebound. -->

            <Action name="UI_SHORTCUT_LEFT_STICK_UP">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_LEFT_STICK_RIGHT">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_LEFT_STICK_DOWN">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_LEFT_STICK_LEFT">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_INPUT_UP">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_INPUT_RIGHT">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_INPUT_DOWN">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_INPUT_LEFT">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_RIGHT_STICK">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <!-- These binds don't do anything directly, but they allow the keys that
            emulate analog stick directional input to be rebound. -->

            <Action name="UI_SHORTCUT_RIGHT_STICK_UP">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_RIGHT_STICK_RIGHT">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_RIGHT_STICK_DOWN">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_RIGHT_STICK_LEFT">
                <Down>return false</Down>
            </Action>

            <Action name="UI_SHORTCUT_LEFT_SHOULDER">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_RIGHT_SHOULDER">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_LEFT_TRIGGER">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>

            <Action name="UI_SHORTCUT_RIGHT_TRIGGER">
                <Down>return ZO_KeybindStrip_HandleKeybindDown(keybind)</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>
        </Category>
    </Layer>

    <!-- Not player facing -->
    <Layer name="UIError">
        <Category>
            <Action name="UI_ERROR_DISMISS" hideAction="true" inheritsBindFrom="UI_SHORTCUT_PRIMARY">
                <Down>return ZO_UIErrors_Dismiss()</Down>
            </Action>
            <Action name="UI_ERROR_SUPPRESS" hideAction="true" inheritsBindFrom="UI_SHORTCUT_TERTIARY">
                <Down>return ZO_UIErrors_Suppress()</Down>
            </Action>
            <Action name="UI_ERROR_RELOAD_UI" hideAction="true" inheritsBindFrom="UI_SHORTCUT_SECONDARY">
                <Down>ReloadUI("ingame")</Down>
            </Action>
            <Action name="UI_ERROR_COPY" hideAction="true" inheritsBindFrom="UI_SHORTCUT_QUATERNARY">
                <Down>return ZO_UIErrors_CopyError()</Down>
            </Action>
            <Action name="UI_ERROR_MORE_INFO" hideAction="true" inheritsBindFrom="UI_SHORTCUT_QUINARY">
                <Down>
                    if IsInGamepadPreferredMode() then
                        return ZO_UIErrors_ToggleMoreInfo()
                    else
                        return false
                    end
                </Down>
            </Action>
            <Action name="UI_ERROR_PAGE_LEFT" hideAction="true" inheritsBindFrom="UI_SHORTCUT_LEFT_TRIGGER">
                <Down>
                    if IsInGamepadPreferredMode() then
                        return ZO_UIErrors_PageLeft()
                    else
                        return false
                    end
                </Down>
            </Action>
            <Action name="UI_ERROR_PAGE_RIGHT" hideAction="true" inheritsBindFrom="UI_SHORTCUT_RIGHT_TRIGGER">
                <Down>
                    if IsInGamepadPreferredMode() then
                        return ZO_UIErrors_PageRight()
                    else
                        return false
                    end
                </Down>
            </Action>
        </Category>
    </Layer>

    <Layer name="ScryingActions">
        <Category>
            <Action name="SCRYING_TOGGLE_NORMAL_ACTION">
                <Down>
                    SCRYING:TryToggleCurrentSkill(SCRYING_ACTIVE_SKILL_NORMAL)
                </Down>
            </Action>
            <Action name="SCRYING_TOGGLE_SPECIAL_ACTION_1">
                <Down>
                    SCRYING:TryToggleCurrentSkill(SCRYING_ACTIVE_SKILL_BOMB)
                </Down>
            </Action>
            <Action name="SCRYING_TOGGLE_SPECIAL_ACTION_2">
                <Down>
                    SCRYING:TryToggleCurrentSkill(SCRYING_ACTIVE_SKILL_CO_OPT)
                </Down>
            </Action>
            <Action name="SCRYING_TOGGLE_SPECIAL_ACTION_3">
                <Down>
                    SCRYING:TryToggleCurrentSkill(SCRYING_ACTIVE_SKILL_LINE)
                </Down>
            </Action>
            <Action name="SCRYING_PERFORM_ACTION">
                <Down>
                    SCRYING:PerformAction()
                </Down>
            </Action>
            <Action name="SCRYING_CANCEL">
                <Down>
                    SCRYING:TryCancel()
                </Down>
            </Action>
            <Action name="SCRYING_MORE_INFO">
                <Down>
                    return SCRYING:ShowMoreInfo()
                </Down>
                <Up>
                    return SCRYING:HideMoreInfo()
                </Up>
            </Action>
        </Category>
    </Layer>

    <Layer name="AntiquityDiggingActions">
        <Category>
            <Action name="ANTIQUITY_DIGGING_PRIMARY_ACTION">
                <Down> return ANTIQUITY_DIGGING:UsePrimaryAction() </Down>
            </Action>

            <Action name="ANTIQUITY_DIGGING_CODEX">
                <Down> return ANTIQUITY_DIGGING:UseCodex() </Down>
            </Action>

            <Action name="ANTIQUITY_DIGGING_CANCEL">
                <Down> return ANTIQUITY_DIGGING:TryCancel() </Down>
            </Action>

            <Action name="ANTIQUITY_DIGGING_SELECT_BASIC_EXCAVATION">
                <Down> return ANTIQUITY_DIGGING:SelectTool(DIGGING_ACTIVE_SKILL_BASIC_EXCAVATION) </Down>
            </Action>

            <Action name="ANTIQUITY_DIGGING_SELECT_HEAVY_SHOVEL">
                <Down> return ANTIQUITY_DIGGING:SelectTool(DIGGING_ACTIVE_SKILL_HEAVY_SHOVEL) </Down>
            </Action>

            <Action name="ANTIQUITY_DIGGING_SELECT_RADAR_SENSE">
                <Down> return ANTIQUITY_DIGGING:SelectTool(DIGGING_ACTIVE_SKILL_RADAR_SENSE) </Down>
            </Action>

            <Action name="ANTIQUITY_DIGGING_SELECT_CAREFUL_TOUCH">
                <Down> return ANTIQUITY_DIGGING:SelectTool(DIGGING_ACTIVE_SKILL_CAREFUL_TOUCH) </Down>
            </Action>
        </Category>
    </Layer>

    <Layer name="MarketAnnouncement" allowFallthrough="false">
        <Category>
            <Action name="MARKET_ANNOUNCEMENT_CLOSE" hideAction="true">
                <Down>SYSTEMS:GetObject("marketAnnouncement"):OnCloseClicked()</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>
            <Action name="MARKET_ANNOUNCEMENT_SELECT" hideAction="true" inheritsBindFrom="UI_SHORTCUT_PRIMARY">
                <Down>SYSTEMS:GetObject("marketAnnouncement"):OnSelectionClicked()</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>
            <Action name="MARKET_ANNOUNCEMENT_HELP" hideAction="true" inheritsBindFrom="UI_SHORTCUT_SECONDARY">
                <Down>SYSTEMS:GetObject("marketAnnouncement"):OnHelpClicked()</Down>
                <Up>return ZO_KeybindStrip_HandleKeybindUp(keybind)</Up>
            </Action>
        </Category>
    </Layer>
</Bindings>
